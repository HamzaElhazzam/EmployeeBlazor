@page "/Register"
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager

<h3>Register</h3>

<EditForm OnSubmit="RegisterUser" Model="@registerModel">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="Input_Email">Email</label>
        <input id="Input_Email" class="form-control" @bind="@registerModel.Email" />
    </div>

    <div class="form-group">
        <label for="Input_Password">Password</label>
        <input id="Input_Password" class="form-control" @bind="@registerModel.Password" />
    </div>

    <div class="form-group">
        <label for="Input_ConfirmPassword">Confirm Password</label>
        <input id="Input_ConfirmPassword" class="form-control" @bind="@registerModel.ConfirmPassword" />
    </div>

    <button type="submit" class="btn btn-primary">Register</button>
</EditForm>

@code {
    private RegisterModel registerModel = new RegisterModel();

    private async Task RegisterUser()
    {
        var user = new ApplicationUser { UserName = registerModel.Email, Email = registerModel.Email };
        var result = await UserManager.CreateAsync(user, registerModel.Password);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("Login");
        }
        else
        {
            Console.WriteLine("Registration failed. Errors:");
            foreach (var error in result.Errors)
            {
                Console.WriteLine(error.Description);
            }
        }
    }

    private class RegisterModel
    {
        [Required(ErrorMessage = "Email is required")]
        [EmailAddress(ErrorMessage = "Invalid email address")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required")]
        [MinLength(6, ErrorMessage = "Password must be at least 6 characters")]
        [DataType(DataType.Password)]
        public string Password { get; set; }
        [Compare("Password", ErrorMessage = "Passwords do not match")]
        [DataType(DataType.Password)]
        public string ConfirmPassword { get; set; }
    }
}
