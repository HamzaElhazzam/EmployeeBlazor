@page "/login"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@inject SignInManager<ApplicationUser> signInManager
@inject NavigationManager NavigationManager

<h3>Login</h3>
<EditForm Model="@loginModel" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="InputEmail">Email address</label>
        <InputText id="InputEmail" class="form-control" @bind-Value="loginModel.Email" />
    </div>
    <div class="form-group">
        <label for="InputPassword">Password</label>
        <InputText type="password" id="InputPassword" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>
<AuthorizeView>
    <Authorized>
        <p>You are already logged in.</p>
    </Authorized>
    <NotAuthorized>
        

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <p class="text-danger">@errorMessage</p>
        }
    </NotAuthorized>
</AuthorizeView>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        var result = await signInManager.PasswordSignInAsync(loginModel.Email, loginModel.Password, true, false);

        if (result.Succeeded)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            errorMessage = "Invalid login attempt. Please check your email and password.";
        }
    }

    private class LoginModel
    {
        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "Password is required.")]
        public string Password { get; set; }
    }
}
